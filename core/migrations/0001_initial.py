# Generated by Django 5.2rc1 on 2025-06-04 17:53

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('document', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Documento de Identificação')),
                ('telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Telefone')),
                ('user_type', models.CharField(choices=[('morador', 'Morador'), ('sindico', 'Sindico'), ('admin', 'Administrador')], default='morador', max_length=20, verbose_name='Tipo de Usuário')),
                ('entry_date', models.DateField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=10, unique=True, verbose_name='Número do Apartamento')),
                ('block', models.CharField(max_length=10, verbose_name='Bloco')),
                ('tread', models.IntegerField(verbose_name='Piso')),
                ('entry_date', models.DateField(auto_now=True)),
                ('exit_date', models.DateField(blank=True, null=True, verbose_name='Data de Saída')),
                ('occupation', models.BooleanField(default=False, verbose_name='Ocupação')),
                ('registered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_apartments', to=settings.AUTH_USER_MODEL, verbose_name='Cadastrado por')),
                ('residents', models.ManyToManyField(blank=True, help_text='Selecione os moradores que residem neste apartamento.', related_name='apartments', to=settings.AUTH_USER_MODEL, verbose_name='Moradores')),
            ],
            options={
                'verbose_name': 'Apartamento',
                'verbose_name_plural': 'Apartamentos',
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=255, verbose_name='Assunto')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('sent_at', models.DateTimeField(auto_now_add=True, verbose_name='Data e Hora')),
                ('recipients', models.ManyToManyField(related_name='received_communications', to=settings.AUTH_USER_MODEL, verbose_name='Destinatários')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communications', to=settings.AUTH_USER_MODEL, verbose_name='Remetente')),
            ],
            options={
                'verbose_name': 'Comunicação',
                'verbose_name_plural': 'Comunicações',
            },
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, help_text='Informe o valor da despesa ou receita.', max_digits=10, verbose_name='Valor')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='Data')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('document', models.FileField(blank=True, help_text='Envie o comprovante de pagamento ou recibo.', null=True, upload_to='financeiro_doc/', verbose_name='Comprovante')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='finance', to=settings.AUTH_USER_MODEL, verbose_name='Criador')),
            ],
            options={
                'verbose_name': 'Finança',
                'verbose_name_plural': 'Finanças',
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('space', models.CharField(choices=[('salão_de_festas', 'Salão de Festas'), ('churrasqueira', 'Churrasqueira'), ('piscina', 'Piscina'), ('quadra', 'Quadra Poliesportiva'), ('playground', 'Playground'), ('academia', 'Academia')], max_length=50, verbose_name='Espaço')),
                ('start_time', models.DateTimeField(verbose_name='Data e Hora Início')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora de Fim')),
                ('resident', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to=settings.AUTH_USER_MODEL, verbose_name='Morador')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate', models.CharField(max_length=10, unique=True, verbose_name='Placa do Veículo')),
                ('model', models.CharField(max_length=50, verbose_name='Modelo do Veículo')),
                ('color', models.CharField(max_length=20, verbose_name='Cor do Veículo')),
                ('garage', models.CharField(max_length=10, unique=True, verbose_name='Garagem')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to=settings.AUTH_USER_MODEL, verbose_name='Proprietário')),
                ('registered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_vehicles', to=settings.AUTH_USER_MODEL, verbose_name='Cadastrado por')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Visitante')),
                ('document', models.CharField(max_length=20, unique=True, verbose_name='Documento do Visitante')),
                ('telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Telefone do Visitante')),
                ('registered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_visitors', to=settings.AUTH_USER_MODEL, verbose_name='Cadastrado por')),
            ],
            options={
                'verbose_name': 'Visitante',
                'verbose_name_plural': 'Visitantes',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='Data da Visita')),
                ('exit_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Saída')),
                ('apartment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='apartment', to='core.apartment')),
                ('visitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitor', to='core.visitor')),
            ],
            options={
                'verbose_name': 'Visita',
                'verbose_name_plural': 'Visitas',
                'ordering': ['entry_date'],
                'unique_together': {('visitor', 'apartment')},
            },
        ),
        migrations.AddField(
            model_name='apartment',
            name='visitors',
            field=models.ManyToManyField(related_name='visited_apartments', through='core.Visit', through_fields=('apartment', 'visitor'), to='core.visitor'),
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature_image', models.FileField(blank=True, help_text='Anexe uma foto da assinatura.', null=True, upload_to='signature_doc/', verbose_name='Comprovante')),
                ('order_code', models.CharField(max_length=20, unique=True, verbose_name='Número do Pedido')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Data do Recebimento')),
                ('status', models.CharField(choices=[('recebido', 'Recebido'), ('entregue', 'Entregue')], default='recebido', max_length=20, verbose_name='Status do Pedido')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Proprietário do Pedido')),
                ('registered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registered_orders', to=settings.AUTH_USER_MODEL, verbose_name='Cadastrado por')),
            ],
            options={
                'verbose_name': 'Encomenda',
                'verbose_name_plural': ('Encomendas',),
                'unique_together': {('order_code', 'owner')},
            },
        ),
    ]
