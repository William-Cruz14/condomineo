# Generated by Django 5.2.6 on 2025-10-01 00:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(verbose_name='Número do Apartamento')),
                ('block', models.CharField(max_length=10, verbose_name='Bloco')),
                ('tread', models.IntegerField(verbose_name='Piso')),
                ('entry_date', models.DateField(blank=True, null=True, verbose_name='Data de Entrada')),
                ('exit_date', models.DateField(blank=True, null=True, verbose_name='Data de Saída')),
                ('occupation', models.CharField(choices=[('occupied', 'Ocupado'), ('unoccupied', 'Desocupado')], default='unoccupied', help_text='Selecione o status de ocupação do apartamento.', max_length=20, verbose_name='Ocupação')),
            ],
            options={
                'verbose_name': 'Apartamento',
                'verbose_name_plural': 'Apartamentos',
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('message', models.TextField(verbose_name='Mensagem')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Comunicação',
                'verbose_name_plural': 'Comunicações',
            },
        ),
        migrations.CreateModel(
            name='Condominium',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Condomínio')),
                ('cnpj', models.CharField(max_length=20, unique=True, verbose_name='Cadastro Nacional da Pessoa Jurídica (CNPJ)')),
                ('road', models.CharField(max_length=100, verbose_name='Rua')),
                ('number', models.IntegerField(verbose_name='Número')),
                ('complement', models.CharField(blank=True, max_length=10, null=True, verbose_name='Complemento')),
                ('code_condominium', models.CharField(max_length=20, unique=True, verbose_name='Código do Condomínio')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Condomínio',
                'verbose_name_plural': 'Condomínios',
            },
        ),
        migrations.CreateModel(
            name='Finance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, help_text='Informe o valor da despesa ou receita.', max_digits=10, verbose_name='Valor')),
                ('date', models.DateTimeField(auto_now=True, verbose_name='Data')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('document', models.FileField(blank=True, help_text='Envie o comprovante de pagamento ou recibo.', null=True, upload_to='financeiro_doc/', verbose_name='Comprovante')),
            ],
            options={
                'verbose_name': 'Finança',
                'verbose_name_plural': 'Finanças',
            },
        ),
        migrations.CreateModel(
            name='Notice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Título')),
                ('content', models.TextField(verbose_name='Conteúdo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('file_complement', models.FileField(blank=True, help_text='Anexe um arquivo relacionado ao aviso, se necessário.', null=True, upload_to='notice_files/', verbose_name='Arquivo Complementar')),
            ],
            options={
                'verbose_name': 'Aviso',
                'verbose_name_plural': 'Avisos',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature_image', models.FileField(blank=True, help_text='Anexe uma foto da assinatura.', null=True, upload_to='signature_doc/', verbose_name='Comprovante')),
                ('order_code', models.CharField(max_length=20, verbose_name='Número do Pedido')),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Data do Recebimento')),
                ('status', models.CharField(choices=[('recebido', 'Recebido'), ('em_progresso', 'Em Progresso'), ('concluído', 'Concluído')], default='recebido', help_text='Selecione o status atual do pedido.', max_length=20, verbose_name='Status do Pedido')),
            ],
            options={
                'verbose_name': 'Encomenda',
                'verbose_name_plural': 'Encomendas',
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('space', models.CharField(choices=[('salão_de_festas', 'Salão de Festas'), ('churrasqueira', 'Churrasqueira'), ('piscina', 'Piscina'), ('quadra', 'Quadra Poliesportiva'), ('playground', 'Playground'), ('academia', 'Academia')], default='salão_de_festas', help_text='Selecione o espaço que deseja reservar.', max_length=20, verbose_name='Espaço')),
                ('start_time', models.DateTimeField(verbose_name='Data e Hora Início')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='Data e Hora de Fim')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate', models.CharField(max_length=10, verbose_name='Placa do Veículo')),
                ('model', models.CharField(max_length=50, verbose_name='Modelo do Veículo')),
                ('color', models.CharField(max_length=20, verbose_name='Cor do Veículo')),
                ('garage', models.CharField(max_length=10, verbose_name='Garagem')),
            ],
            options={
                'verbose_name': 'Veículo',
                'verbose_name_plural': 'Veículos',
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observação')),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='Data da Visita')),
                ('exit_date', models.DateTimeField(blank=True, null=True, verbose_name='Data de Saída')),
            ],
            options={
                'verbose_name': 'Visita',
                'verbose_name_plural': 'Visitas',
                'ordering': ['entry_date'],
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Nome do Visitante')),
                ('cpf', models.CharField(help_text='Apenas números, sem pontos ou traços.', max_length=11, verbose_name='Documento do Visitante')),
                ('telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Telefone do Visitante')),
            ],
            options={
                'verbose_name': 'Visitante',
                'verbose_name_plural': 'Visitantes',
            },
        ),
    ]
