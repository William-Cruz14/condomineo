# Generated by Django 5.2.6 on 2025-10-01 00:20

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='Cadastro de Pessoa Física (CPF)')),
                ('telephone', models.CharField(blank=True, max_length=11, null=True, verbose_name='Telefone')),
                ('user_type', models.CharField(choices=[('resident', 'Morador'), ('employee', 'Funcionário'), ('admin', 'Administrador')], default='resident', max_length=10, verbose_name='Tipo de Usuário')),
                ('position', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cargo')),
                ('apartment', models.ForeignKey(blank=True, help_text='Selecione o apartamento associado ao morador.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='residents', to='core.apartment', verbose_name='Apartamento')),
                ('condominium', models.ForeignKey(blank=True, help_text='Condomínio associado ao funcionário ou morador.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.condominium', verbose_name='Codomínio')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('managed_condominiums', models.ManyToManyField(blank=True, help_text='Selecione os condomínios que este usuário pode gerenciar.', related_name='managers', to='core.condominium', verbose_name='Condomínios Gerenciados')),
                ('registered_by', models.ForeignKey(blank=True, help_text='Usuário que registrou este usuário.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registered_users', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Pessoa',
                'verbose_name_plural': 'Pessoas',
                'ordering': ['name'],
            },
        ),
    ]
